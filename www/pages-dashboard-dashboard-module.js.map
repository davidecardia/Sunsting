{"version":3,"sources":["webpack:///./src/app/pages/dashboard/dashboard.module.ts","webpack:///./src/app/pages/dashboard/dashboard.page.html","webpack:///./src/app/pages/dashboard/dashboard.page.scss","webpack:///./src/app/pages/dashboard/dashboard.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAuC;AACM;AACF;AACU;AAEV;AAEI;AACS;AAExD,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;KAC3B;CACJ,CAAC;AAYF;IAAA;IACA,CAAC;IADY,mBAAmB;QAV/B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,kEAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAChC;YACD,YAAY,EAAE,CAAC,6DAAa,CAAC;SAChC,CAAC;OACW,mBAAmB,CAC/B;IAAD,0BAAC;CAAA;AAD+B;;;;;;;;;;;;AC3BhC,wCAAwC,OAAO,+d;;;;;;;;;;;ACA/C,+DAA+D,uJ;;;;;;;;;;;;;;;;;;;;ACAR;AACG;AAGA;AACF;AAQxD;IAMI,uBACY,YAA0B,EAC1B,YAA0B,EAC1B,MAAc,EACd,WAAwB;QAHxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QATpC,QAAG,GAAG,sBAAsB,CAAC;QAC7B,UAAK,GAAG,WAAW,CAAC;QAUjB;;;;;;;;YAQI;IACP,CAAC;IAED,wCAAgB,GAAhB;QACI,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAQC;QAPG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAE,eAAK;YACzC,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC;gBACZ,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;YAC5B,CAAC,CAAC,CAAC;YAEH,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kCAAU,GAAV,UAAW,KAAK;QAAhB,iBAMC;QALG,UAAU,CAAC;YACP,KAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,mFAAmF;YACnF,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QAC5B,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IACD,+BAAO,GAAP,UAAQ,KAAK;QACT,iFAAiF;IACrF,CAAC;IACD,gCAAQ,GAAR,UAAS,KAAK;QACV,sDAAsD;IAC1D,CAAC;IA5CQ;QAAR,2DAAK,EAAE;;6CAAI;IALH,aAAa;QALzB,+DAAS,CAAC;YACP,QAAQ,EAAE,eAAe;YACzB,2GAAoC;;SAEvC,CAAC;+EAQ4B,oEAAY;YACZ,oEAAY;YAClB,oDAAM;YACD,kEAAW;OAV3B,aAAa,CAkDzB;IAAD,oBAAC;CAAA;AAlDyB","file":"pages-dashboard-dashboard-module.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {DashboardPage} from './dashboard.page';\nimport {SharedModule} from '../../shared/shared.module';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: DashboardPage\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [DashboardPage]\n})\nexport class DashboardPageModule {\n}\n","module.exports = \"<app-header title=\\\"{{title}}\\\"></app-header>\\n<ion-content>\\n    <app-post [posts]=\\\"posts\\\"></app-post>\\n\\n\\n    <ion-refresher slot=\\\"fixed\\\"\\n                   (ionRefresh)=\\\"ionRefresh($event)\\\"\\n                   (ionPull)=\\\"ionPull($event)\\\"\\n                   (ionStart)=\\\"ionStart($event)\\\">\\n        <ion-refresher-content\\n                pullingIcon=\\\"arrow-dropdown\\\"\\n                refreshingSpinner=\\\"circles\\\">\\n        </ion-refresher-content>\\n    </ion-refresher>\\n</ion-content>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2Rhc2hib2FyZC9kYXNoYm9hcmQucGFnZS5zY3NzIn0= */\"","import {Component, Input, NgZone} from '@angular/core';\nimport {PostsService} from '../../services/posts.service';\nimport {Content} from '../../interfaces/content';\nimport {Topic} from '../../interfaces/topic';\nimport {TopicService} from '../../services/topic.service';\nimport {AuthService} from '../../services/auth.service';\n\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.page.html',\n    styleUrls: ['./dashboard.page.scss'],\n})\nexport class DashboardPage {\n    url = '../assets/ssLogo.png';\n    title = 'Dashboard';\n    posts: Content[];\n    topic: Topic[];\n    @Input() ev;\n    constructor(\n        private postsService: PostsService,\n        private topicService: TopicService,\n        private ngZone: NgZone,\n        private authService: AuthService\n    ) {\n       /* if (this.authService.checkDevice() == 'WEB') {\n            if (this.authService.isAuthenticated() === false) {\n                sessionStorage.setItem('token', 'Bearer 44lfoipu76vcm81ej8nkb836u1ph3j0f');\n            }\n        } else {\n            if (this.authService.isAuthenticated() === false) {\n                localStorage.setItem('token', 'Bearer 44lfoipu76vcm81ej8nkb836u1ph3j0f');\n            }\n        }*/\n    }\n\n    ionViewWillEnter() {\n        this.getPosts();\n    }\n\n    getPosts() {\n        this.postsService.getPosts().subscribe( posts => {\n            this.ngZone.run(() => {\n                this.posts = posts.data;\n            });\n\n            console.log(this.posts);\n        });\n    }\n\n    ionRefresh(event) {\n        setTimeout(() => {\n            this.getPosts();\n            // complete()  signify that the refreshing has completed and to close the refresher\n            event.target.complete();\n        }, 2000);\n    }\n    ionPull(event) {\n        // Emitted while the user is pulling down the content and exposing the refresher.\n    }\n    ionStart(event) {\n        // Emitted when the user begins to start pulling down.\n    }\n}\n\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}